"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRequest = exports.getTransactionStatus = exports.getRequest = void 0;
const serialize_1 = require("near-api-js/lib/utils/serialize");
const uuid4_1 = __importDefault(require("uuid4"));
const utils_1 = require("../utils");
const getRequest = (id, network, hereApi, signal) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield fetch(`${hereApi}/api/v1/web/web_request?request_id=${id}`, {
        headers: { "content-type": "application/json" },
        method: "GET",
        signal,
    });
    if (res.ok === false) {
        throw Error(yield res.text());
    }
    const { transaction } = yield res.json();
    const data = JSON.parse((0, serialize_1.base_decode)(transaction).toString("utf8"));
    if (data.network != null && data.network !== network) {
        throw Error("Incorrect network");
    }
    return data.transactions;
});
exports.getRequest = getRequest;
const getTransactionStatus = (api, request) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield fetch(`${api}/api/v1/web/web_request?request_id=${request}`, {
        headers: { "content-type": "application/json" },
        method: "GET",
    });
    if (res.ok === false) {
        throw Error();
    }
    const data = yield res.json();
    return {
        account_id: data.account_id,
        payload: data.transaction_hash,
        status: data.status,
    };
});
exports.getTransactionStatus = getTransactionStatus;
const createRequest = (transactions, network, hereApi, signal) => __awaiter(void 0, void 0, void 0, function* () {
    const data = { transactions, network, id: (0, uuid4_1.default)() };
    const res = yield fetch(`${hereApi}/api/v1/web/request_transaction_sign`, {
        method: "POST",
        signal,
        body: JSON.stringify({
            transaction: (0, serialize_1.base_encode)(JSON.stringify(data)),
            request_id: data.id,
            topic: (0, utils_1.getDeviceId)(),
        }),
        headers: {
            "content-type": "application/json",
        },
    });
    if (res.ok === false) {
        throw Error(yield res.text());
    }
    return data.id;
});
exports.createRequest = createRequest;
//# sourceMappingURL=methods.js.map